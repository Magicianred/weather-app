{"version":3,"sources":["containers/App/App.js","reportWebVitals.js","index.js"],"names":["App","api","useState","city","form","setForm","weather","setWeather","e","a","preventDefault","alert","fetch","then","res","json","data","d","Date","className","undefined","main","temp","type","onChange","value","target","inputHandler","placeholder","name","onClick","weatherData","src","alt","sys","country","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","kelvin","Math","round","kelvinToCelsius","description","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAoIeA,MAlIf,WACE,IAAMC,EACC,mCADDA,EAEK,2CAIX,EAAwBC,mBAAS,CAAEC,KAAM,KAAzC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KARa,4CAYb,WAA2BC,GAA3B,eAAAC,EAAA,yDACED,EAAEE,iBACgB,KAAdN,EAAKD,KAFX,gBAGIQ,MAAM,4BAHV,sCAKuBC,MAAM,GAAD,OACnBX,EADmB,qBACKG,EAAKD,KADV,kBACwBF,IAE7CY,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,KATtB,OAKUA,EALV,OAWIT,EAAW,CAAED,QAASU,IAX1B,4CAZa,sBA6Bb,IAQIC,EAAI,IAAIC,KAuCZ,OAEE,aADA,CACA,OACEC,eACsBC,IAApBd,EAAQA,SACJA,EAAQA,QAAQe,KAAKC,KAAO,OAC1B,WAEF,MANR,SASE,iCACE,uBAAMH,UAAU,aAAhB,UACE,uBACEI,KAAK,OACLC,SAAU,SAAChB,GAAD,OA9DC,SAACA,GACpB,IAAIiB,EAAQjB,EAAEkB,OAAOD,MACrBpB,EAAQ,CAAEF,KAAMsB,IA4DSE,CAAanB,IAC9BW,UAAU,aACVS,YAAY,UACZC,KAAK,SAEP,yBACEN,KAAK,SACLO,QAAS,SAACtB,GAAD,OAlGN,2CAkGauB,CAAYvB,IAC5BW,UAAU,gBAHZ,UAKE,qBACEa,IAAI,4DACJC,IAAI,iBACH,eAIcb,IAApBd,EAAQA,QACP,gCACE,sBAAKa,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGb,EAAQA,QAAQuB,KADnB,MAC4BvB,EAAQA,QAAQ4B,IAAIC,WAEhD,qBAAKhB,UAAU,OAAf,SA5EQ,SAACF,GACnB,IAuBImB,EATO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YAEanB,EAAEoB,UACbC,EAAOrB,EAAEsB,UACTC,EAzBS,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAaiBvB,EAAEwB,YACjBC,EAAOzB,EAAE0B,cACb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,EAAlC,KAgDiCE,CAAY3B,QAErC,sBAAKE,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAhDY,WACtB,IAAI0B,EAASvC,EAAQA,QAAQe,KAAKC,KAElC,OADcwB,KAAKC,MAAMF,EAAS,QA8CDG,GAAvB,WACA,qBAAK7B,UAAU,UAAf,SACGb,EAAQA,QAAQA,QAAQ,GAAG2C,oBAIhC,WCjHGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.694eabeb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const api = {\r\n    key: \"4b3e61d509a14cd79c90d406e79d5d1a\",\r\n    baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n  };\r\n\r\n  // **********************************************************\r\n  const [form, setForm] = useState({ city: \"\" });\r\n  const [weather, setWeather] = useState([]); //Array of objects(json) or JSON array\r\n  // **********************************************************\r\n  // *********************Event handlers***********************\r\n  // -----this is API fetching and also event handler for serach button-----\r\n  async function weatherData(e) {\r\n    e.preventDefault();\r\n    if (form.city === \"\") {\r\n      alert(\"Please insert valid data\");\r\n    } else {\r\n      const data = await fetch(\r\n        `${api.baseURL}weather?q=${form.city}&appid=${api.key}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => data);\r\n      // console.log(data);\r\n      setWeather({ weather: data });\r\n\r\n      // now All data goes to 'weather' so far.\r\n    }\r\n  }\r\n\r\n  const inputHandler = (e) => {\r\n    let value = e.target.value;\r\n    setForm({ city: value });\r\n\r\n    // console.log(form.city);\r\n  };\r\n  // ***********************************************************\r\n  // ***************none event handlers functions***************\r\n  let d = new Date();\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n    return `${day} ${date} ${month} ${year} `;\r\n  };\r\n  // ------------------------------\r\n  const kelvinToCelsius = () => {\r\n    let kelvin = weather.weather.main.temp;\r\n    let celsius = Math.round(kelvin - 273.15);\r\n    return celsius;\r\n  };\r\n\r\n  // ------------------------------\r\n  return (\r\n    // Dynamic CSS\r\n    <div\r\n      className={\r\n        weather.weather !== undefined\r\n          ? weather.weather.main.temp > 289.15\r\n            ? \"app warm\"\r\n            : \"app\"\r\n          : \"app\"\r\n      }\r\n    >\r\n      <main>\r\n        <form className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => inputHandler(e)}\r\n            className=\"search-bar\"\r\n            placeholder=\"City...\"\r\n            name=\"city\"\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(e) => weatherData(e)}\r\n            className=\"search-button\"\r\n          >\r\n            <img\r\n              src=\"https://img.icons8.com/ios-filled/50/ffffff/detective.png\"\r\n              alt=\"searchButton\"\r\n            />{\" \"}\r\n          </button>\r\n        </form>\r\n        {/* *** */}\r\n        {weather.weather !== undefined ? (\r\n          <div>\r\n            <div className=\"location-box\">\r\n              <div className=\"location\">\r\n                {weather.weather.name} , {weather.weather.sys.country}\r\n              </div>\r\n              <div className=\"date\">{dateBuilder(d)}</div>\r\n            </div>\r\n            <div className=\"weather-box\">\r\n              <div className=\"temp\">{kelvinToCelsius()}Â°C</div>\r\n              <div className=\"weather\">\r\n                {weather.weather.weather[0].description}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {/* *** */}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}